<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function fs_user_form_user_login_block_alter(&$form, &$form_state) {
   
  $form['name']['#prefix'] = '<div class="form-group section-name"> <div class="input-group"><div class="input-group-addon"><span class="" aria-hidden="true">Username</span></div>';
  $form['name']['#suffix'] = '</div></div>';
  // $form['name']['#attributes']=array('placeholder'=>' Name '),
  $form['pass']['#prefix'] = '<div class="form-group section-pass"> <div class="input-group"><div class="input-group-addon"><span class="" aria-hidden="true">Password</span></div>';
  $form['pass']['#suffix'] = '</div></div>';  
  $items = array();
  if (variable_get('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)) {
    $items[] = l(t('Sign Up'), 'user/register', array('attributes' => array('title' => t('Create a new user account.'))));
  }

  //$master = variable_get('fs_user_master', 'http://www.cityweekend.com.cn');
  global $base_url;
  $url = $base_url . '/user/password';
  $items[] = l(t('Forget Password'), $url, array(
    'attributes' => array(
      'title' => t('Request new password via e-mail.'),
      'target' => '_blank',
    ),
  ));
  
    $form['links']['#weight'] = 10000;
    $form['links'] ['#markup'] =  theme('item_list', array('items' => $items));
    if(current_path()=="node/1"){
        $form['#action']="/shanghai?destination=shanghai"; 
    }else{
        $form['#action']="/shanghai?destination=".current_path();  
    }

//  $form['#validate'] = [
//    'user_login_name_validate',
////    'fs_user_external_login_authenticate_login_validate',
//    'user_login_final_validate',
//  ];
}

function fs_user_user_update(&$edit, $account, $category) {
  if ($account->original->field_user_family_newsletter['und'][0]['value'] != $account->field_user_family_newsletter['und'][0]['value']) {
    module_load_include('inc', 'fs_umail', 'fs_umail');
    $umail = new UMail();
    $info = [
      'address' => $account->mail ,
      'fullname' => $account->name ,
      'var1' => 'registered'
    ];

    if ($account->field_user_family_newsletter['und'][0]['value']) {
      $result = $umail->fs_umail_newsletter_subscribe($info);
    }
    else {
      $result = $umail->fs_umail_newsletter_unsubscribe($info);
    }

    if ($result['error']!="") {
      form_set_error('form', t('Please try later'));
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function fs_user_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  if (!in_array("administrator", $user->roles)) {
    $form['account']['name']['#disabled'] = TRUE;
    $form['account']['name']['#description'] = t('You can not change your username.');
    $form['account']['mail']['#disabled'] = TRUE;
    $form['account']['mail']['#description'] = t('You can not change your mail.');
    $form['account']['current_pass']['#access'] = FALSE;
    $form['account']['current_pass']['#description'] = t('Password for this account can be changed.');
    $form['account']['pass']['#description'] = t('The password for this account can be changed.');
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function fs_user_form_user_pass_alter(&$form, &$form_state) {
  //$form['actions']['#access'] = FALSE;
   $form['#submit'] = ['fs_user_pass_submit'];
}
function fs_user_pass_submit(&$form, &$form_state) {
  //$form['actions']['#access'] = FALSE;
  $account = $form_state['values']['account'];
  $reset_link = user_pass_reset_url($account);
  // Mail one time login URL and instructions using current language.
  module_load_include('inc', 'fs_umail', 'fs_umail');
  $umail = new UMail();
  $result = $umail->fs_umail_reset_password($account, $reset_link);
  //$sailthru_client = fs_sailthru_user_reset_password($account, $reset_link);
  if ($result['error'] != "") {
    drupal_set_message(t('Unable to send mail to ' . $account->mail), 'error');
  }
  else {
    drupal_set_message(t('Further instructions have been sent to your e-mail address.'));
  }
}
//function fs_user_pass_reset_url($account) {
//  $timestamp = REQUEST_TIME;
//  return url("fs_user/reset/$account->uid/$timestamp/" . user_pass_rehash($account->pass, $timestamp, $account->login, $account->uid), array('absolute' => TRUE));
//}

/**
 * Implements hook_user_insert().
 * 
 */
function fs_user_user_insert(&$edit, $account, $category) {
  if (module_exists('user_registrationpassword')) {
    _fs_user_send_activation_mail($account);
  }
}

function _fs_user_send_activation_mail($account) {
  $activation_link = user_registrationpassword_confirmation_url($account);
  module_load_include('inc', 'fs_umail', 'fs_umail');
  $umail = new UMail();
  $umail->fs_umail_user_activation_email($account, $activation_link);

}

/**
 * Implementation of hook_menu().
 */
//function fs_user_menu() {
//  $items['fs_user/reset/%/%/%'] = array(
//    'title' => 'Reset password',
//    'page callback' => 'drupal_get_form',
//    'page arguments' => array('fs_user_user_pass_reset', 2, 3, 4),
//    'access callback' => TRUE,
//    'type' => MENU_CALLBACK,
//  );
//}
/**
* Implementation of hook_menu_alter
*/

function fs_user_menu_alter(&$items) {

	$items['user/%user_category/edit/Box 1']['type'] = MENU_CALLBACK;
	$items['user/%user_category/edit/Box 2']['type'] = MENU_CALLBACK;
	$items['user/%user_category/edit/Box 3']['type'] = MENU_CALLBACK;
	$items['user/%user_category/edit/Box 4']['type'] = MENU_CALLBACK;
	$items['user/%user_category/edit/Box 5']['type'] = MENU_CALLBACK;
	$items['user/%user_category/edit/Box 6']['type'] = MENU_CALLBACK;
	$items['user/%user_category/edit/Fun Facts']['type'] = MENU_CALLBACK;
	$items['user/%user_category/edit/Fun Facts 2']['type'] = MENU_CALLBACK;

	// Alter some menu tab titles
	$items['user/%user/imce']['title'] = 'Upload photos';

	// Hide IAC client profile tab from non-staff
	$items['user/%user_category/edit/IAC Client Profile']['access callback'] = 'user_access';
	$items['user/%user_category/edit/IAC Client Profile']['access arguments'] = array('update client profile');	
}

